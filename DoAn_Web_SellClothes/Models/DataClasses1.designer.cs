#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DoAn_Web_SellClothes.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QuanLyBanQuanAo")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAccount(Account instance);
    partial void UpdateAccount(Account instance);
    partial void DeleteAccount(Account instance);
    partial void InsertAdminAccount(AdminAccount instance);
    partial void UpdateAdminAccount(AdminAccount instance);
    partial void DeleteAdminAccount(AdminAccount instance);
    partial void InsertFeedback(Feedback instance);
    partial void UpdateFeedback(Feedback instance);
    partial void DeleteFeedback(Feedback instance);
    partial void InsertInvoiceDetail(InvoiceDetail instance);
    partial void UpdateInvoiceDetail(InvoiceDetail instance);
    partial void DeleteInvoiceDetail(InvoiceDetail instance);
    partial void InsertInvoice(Invoice instance);
    partial void UpdateInvoice(Invoice instance);
    partial void DeleteInvoice(Invoice instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertProductDetail(ProductDetail instance);
    partial void UpdateProductDetail(ProductDetail instance);
    partial void DeleteProductDetail(ProductDetail instance);
    partial void InsertProductType(ProductType instance);
    partial void UpdateProductType(ProductType instance);
    partial void DeleteProductType(ProductType instance);
    partial void InsertSizeProduct(SizeProduct instance);
    partial void UpdateSizeProduct(SizeProduct instance);
    partial void DeleteSizeProduct(SizeProduct instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QuanLyBanQuanAoConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Account> Accounts
		{
			get
			{
				return this.GetTable<Account>();
			}
		}
		
		public System.Data.Linq.Table<AdminAccount> AdminAccounts
		{
			get
			{
				return this.GetTable<AdminAccount>();
			}
		}
		
		public System.Data.Linq.Table<Feedback> Feedbacks
		{
			get
			{
				return this.GetTable<Feedback>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceDetail> InvoiceDetails
		{
			get
			{
				return this.GetTable<InvoiceDetail>();
			}
		}
		
		public System.Data.Linq.Table<Invoice> Invoices
		{
			get
			{
				return this.GetTable<Invoice>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<ProductDetail> ProductDetails
		{
			get
			{
				return this.GetTable<ProductDetail>();
			}
		}
		
		public System.Data.Linq.Table<ProductType> ProductTypes
		{
			get
			{
				return this.GetTable<ProductType>();
			}
		}
		
		public System.Data.Linq.Table<SizeProduct> SizeProducts
		{
			get
			{
				return this.GetTable<SizeProduct>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Account")]
	public partial class Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdAccount;
		
		private string _FullName;
		
		private string _Email;
		
		private string _PhoneNumber;
		
		private string _AddressUser;
		
		private string _PasswordUser;
		
		private EntitySet<Invoice> _Invoices;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdAccountChanging(int value);
    partial void OnIdAccountChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnAddressUserChanging(string value);
    partial void OnAddressUserChanged();
    partial void OnPasswordUserChanging(string value);
    partial void OnPasswordUserChanged();
    #endregion
		
		public Account()
		{
			this._Invoices = new EntitySet<Invoice>(new Action<Invoice>(this.attach_Invoices), new Action<Invoice>(this.detach_Invoices));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdAccount", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdAccount
		{
			get
			{
				return this._IdAccount;
			}
			set
			{
				if ((this._IdAccount != value))
				{
					this.OnIdAccountChanging(value);
					this.SendPropertyChanging();
					this._IdAccount = value;
					this.SendPropertyChanged("IdAccount");
					this.OnIdAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressUser", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AddressUser
		{
			get
			{
				return this._AddressUser;
			}
			set
			{
				if ((this._AddressUser != value))
				{
					this.OnAddressUserChanging(value);
					this.SendPropertyChanging();
					this._AddressUser = value;
					this.SendPropertyChanged("AddressUser");
					this.OnAddressUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordUser", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PasswordUser
		{
			get
			{
				return this._PasswordUser;
			}
			set
			{
				if ((this._PasswordUser != value))
				{
					this.OnPasswordUserChanging(value);
					this.SendPropertyChanging();
					this._PasswordUser = value;
					this.SendPropertyChanged("PasswordUser");
					this.OnPasswordUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Invoice", Storage="_Invoices", ThisKey="IdAccount", OtherKey="IdAccount")]
		public EntitySet<Invoice> Invoices
		{
			get
			{
				return this._Invoices;
			}
			set
			{
				this._Invoices.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Invoices(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_Invoices(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdminAccount")]
	public partial class AdminAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdAdminAccount;
		
		private string _UserNameAdmin;
		
		private string _PasswordAdmin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdAdminAccountChanging(int value);
    partial void OnIdAdminAccountChanged();
    partial void OnUserNameAdminChanging(string value);
    partial void OnUserNameAdminChanged();
    partial void OnPasswordAdminChanging(string value);
    partial void OnPasswordAdminChanged();
    #endregion
		
		public AdminAccount()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdAdminAccount", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdAdminAccount
		{
			get
			{
				return this._IdAdminAccount;
			}
			set
			{
				if ((this._IdAdminAccount != value))
				{
					this.OnIdAdminAccountChanging(value);
					this.SendPropertyChanging();
					this._IdAdminAccount = value;
					this.SendPropertyChanged("IdAdminAccount");
					this.OnIdAdminAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserNameAdmin", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserNameAdmin
		{
			get
			{
				return this._UserNameAdmin;
			}
			set
			{
				if ((this._UserNameAdmin != value))
				{
					this.OnUserNameAdminChanging(value);
					this.SendPropertyChanging();
					this._UserNameAdmin = value;
					this.SendPropertyChanged("UserNameAdmin");
					this.OnUserNameAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordAdmin", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PasswordAdmin
		{
			get
			{
				return this._PasswordAdmin;
			}
			set
			{
				if ((this._PasswordAdmin != value))
				{
					this.OnPasswordAdminChanging(value);
					this.SendPropertyChanging();
					this._PasswordAdmin = value;
					this.SendPropertyChanged("PasswordAdmin");
					this.OnPasswordAdminChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Feedback")]
	public partial class Feedback : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdFeedback;
		
		private string _FullNameUserFeedback;
		
		private string _EmailUserFeedback;
		
		private string _DescribeFeedback;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdFeedbackChanging(int value);
    partial void OnIdFeedbackChanged();
    partial void OnFullNameUserFeedbackChanging(string value);
    partial void OnFullNameUserFeedbackChanged();
    partial void OnEmailUserFeedbackChanging(string value);
    partial void OnEmailUserFeedbackChanged();
    partial void OnDescribeFeedbackChanging(string value);
    partial void OnDescribeFeedbackChanged();
    #endregion
		
		public Feedback()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFeedback", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdFeedback
		{
			get
			{
				return this._IdFeedback;
			}
			set
			{
				if ((this._IdFeedback != value))
				{
					this.OnIdFeedbackChanging(value);
					this.SendPropertyChanging();
					this._IdFeedback = value;
					this.SendPropertyChanged("IdFeedback");
					this.OnIdFeedbackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullNameUserFeedback", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FullNameUserFeedback
		{
			get
			{
				return this._FullNameUserFeedback;
			}
			set
			{
				if ((this._FullNameUserFeedback != value))
				{
					this.OnFullNameUserFeedbackChanging(value);
					this.SendPropertyChanging();
					this._FullNameUserFeedback = value;
					this.SendPropertyChanged("FullNameUserFeedback");
					this.OnFullNameUserFeedbackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailUserFeedback", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EmailUserFeedback
		{
			get
			{
				return this._EmailUserFeedback;
			}
			set
			{
				if ((this._EmailUserFeedback != value))
				{
					this.OnEmailUserFeedbackChanging(value);
					this.SendPropertyChanging();
					this._EmailUserFeedback = value;
					this.SendPropertyChanged("EmailUserFeedback");
					this.OnEmailUserFeedbackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescribeFeedback", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string DescribeFeedback
		{
			get
			{
				return this._DescribeFeedback;
			}
			set
			{
				if ((this._DescribeFeedback != value))
				{
					this.OnDescribeFeedbackChanging(value);
					this.SendPropertyChanging();
					this._DescribeFeedback = value;
					this.SendPropertyChanged("DescribeFeedback");
					this.OnDescribeFeedbackChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceDetails")]
	public partial class InvoiceDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdSizeProduct;
		
		private int _IdProduct;
		
		private int _IdInvoice;
		
		private int _Quantity;
		
		private int _UnitPrice;
		
		private EntityRef<Invoice> _Invoice;
		
		private EntityRef<ProductDetail> _ProductDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdSizeProductChanging(int value);
    partial void OnIdSizeProductChanged();
    partial void OnIdProductChanging(int value);
    partial void OnIdProductChanged();
    partial void OnIdInvoiceChanging(int value);
    partial void OnIdInvoiceChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnUnitPriceChanging(int value);
    partial void OnUnitPriceChanged();
    #endregion
		
		public InvoiceDetail()
		{
			this._Invoice = default(EntityRef<Invoice>);
			this._ProductDetail = default(EntityRef<ProductDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSizeProduct", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdSizeProduct
		{
			get
			{
				return this._IdSizeProduct;
			}
			set
			{
				if ((this._IdSizeProduct != value))
				{
					if (this._ProductDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdSizeProductChanging(value);
					this.SendPropertyChanging();
					this._IdSizeProduct = value;
					this.SendPropertyChanged("IdSizeProduct");
					this.OnIdSizeProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProduct", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdProduct
		{
			get
			{
				return this._IdProduct;
			}
			set
			{
				if ((this._IdProduct != value))
				{
					if (this._ProductDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdProductChanging(value);
					this.SendPropertyChanging();
					this._IdProduct = value;
					this.SendPropertyChanged("IdProduct");
					this.OnIdProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdInvoice", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdInvoice
		{
			get
			{
				return this._IdInvoice;
			}
			set
			{
				if ((this._IdInvoice != value))
				{
					if (this._Invoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdInvoiceChanging(value);
					this.SendPropertyChanging();
					this._IdInvoice = value;
					this.SendPropertyChanged("IdInvoice");
					this.OnIdInvoiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Int NOT NULL")]
		public int UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_InvoiceDetail", Storage="_Invoice", ThisKey="IdInvoice", OtherKey="IdInvoice", IsForeignKey=true)]
		public Invoice Invoice
		{
			get
			{
				return this._Invoice.Entity;
			}
			set
			{
				Invoice previousValue = this._Invoice.Entity;
				if (((previousValue != value) 
							|| (this._Invoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Invoice.Entity = null;
						previousValue.InvoiceDetails.Remove(this);
					}
					this._Invoice.Entity = value;
					if ((value != null))
					{
						value.InvoiceDetails.Add(this);
						this._IdInvoice = value.IdInvoice;
					}
					else
					{
						this._IdInvoice = default(int);
					}
					this.SendPropertyChanged("Invoice");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductDetail_InvoiceDetail", Storage="_ProductDetail", ThisKey="IdSizeProduct,IdProduct", OtherKey="IdSizeProduct,IdProduct", IsForeignKey=true)]
		public ProductDetail ProductDetail
		{
			get
			{
				return this._ProductDetail.Entity;
			}
			set
			{
				ProductDetail previousValue = this._ProductDetail.Entity;
				if (((previousValue != value) 
							|| (this._ProductDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductDetail.Entity = null;
						previousValue.InvoiceDetails.Remove(this);
					}
					this._ProductDetail.Entity = value;
					if ((value != null))
					{
						value.InvoiceDetails.Add(this);
						this._IdSizeProduct = value.IdSizeProduct;
						this._IdProduct = value.IdProduct;
					}
					else
					{
						this._IdSizeProduct = default(int);
						this._IdProduct = default(int);
					}
					this.SendPropertyChanged("ProductDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Invoice")]
	public partial class Invoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdInvoice;
		
		private string _InvoiceNameReceiver;
		
		private string _InvoiceAddressReceiver;
		
		private string _InvoicePhoneReceiver;
		
		private System.DateTime _InvoiceDate;
		
		private int _TotalInvoice;
		
		private string _PaymentsInvoice;
		
		private bool _StatusInvoice;
		
		private bool _Paid;
		
		private string _NoteInvoice;
		
		private int _IdAccount;
		
		private EntitySet<InvoiceDetail> _InvoiceDetails;
		
		private EntityRef<Account> _Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdInvoiceChanging(int value);
    partial void OnIdInvoiceChanged();
    partial void OnInvoiceNameReceiverChanging(string value);
    partial void OnInvoiceNameReceiverChanged();
    partial void OnInvoiceAddressReceiverChanging(string value);
    partial void OnInvoiceAddressReceiverChanged();
    partial void OnInvoicePhoneReceiverChanging(string value);
    partial void OnInvoicePhoneReceiverChanged();
    partial void OnInvoiceDateChanging(System.DateTime value);
    partial void OnInvoiceDateChanged();
    partial void OnTotalInvoiceChanging(int value);
    partial void OnTotalInvoiceChanged();
    partial void OnPaymentsInvoiceChanging(string value);
    partial void OnPaymentsInvoiceChanged();
    partial void OnStatusInvoiceChanging(bool value);
    partial void OnStatusInvoiceChanged();
    partial void OnPaidChanging(bool value);
    partial void OnPaidChanged();
    partial void OnNoteInvoiceChanging(string value);
    partial void OnNoteInvoiceChanged();
    partial void OnIdAccountChanging(int value);
    partial void OnIdAccountChanged();
    #endregion
		
		public Invoice()
		{
			this._InvoiceDetails = new EntitySet<InvoiceDetail>(new Action<InvoiceDetail>(this.attach_InvoiceDetails), new Action<InvoiceDetail>(this.detach_InvoiceDetails));
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdInvoice", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdInvoice
		{
			get
			{
				return this._IdInvoice;
			}
			set
			{
				if ((this._IdInvoice != value))
				{
					this.OnIdInvoiceChanging(value);
					this.SendPropertyChanging();
					this._IdInvoice = value;
					this.SendPropertyChanged("IdInvoice");
					this.OnIdInvoiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNameReceiver", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string InvoiceNameReceiver
		{
			get
			{
				return this._InvoiceNameReceiver;
			}
			set
			{
				if ((this._InvoiceNameReceiver != value))
				{
					this.OnInvoiceNameReceiverChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNameReceiver = value;
					this.SendPropertyChanged("InvoiceNameReceiver");
					this.OnInvoiceNameReceiverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceAddressReceiver", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string InvoiceAddressReceiver
		{
			get
			{
				return this._InvoiceAddressReceiver;
			}
			set
			{
				if ((this._InvoiceAddressReceiver != value))
				{
					this.OnInvoiceAddressReceiverChanging(value);
					this.SendPropertyChanging();
					this._InvoiceAddressReceiver = value;
					this.SendPropertyChanged("InvoiceAddressReceiver");
					this.OnInvoiceAddressReceiverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoicePhoneReceiver", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string InvoicePhoneReceiver
		{
			get
			{
				return this._InvoicePhoneReceiver;
			}
			set
			{
				if ((this._InvoicePhoneReceiver != value))
				{
					this.OnInvoicePhoneReceiverChanging(value);
					this.SendPropertyChanging();
					this._InvoicePhoneReceiver = value;
					this.SendPropertyChanged("InvoicePhoneReceiver");
					this.OnInvoicePhoneReceiverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="DateTime NOT NULL")]
		public System.DateTime InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this.OnInvoiceDateChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDate = value;
					this.SendPropertyChanged("InvoiceDate");
					this.OnInvoiceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalInvoice", DbType="Int NOT NULL")]
		public int TotalInvoice
		{
			get
			{
				return this._TotalInvoice;
			}
			set
			{
				if ((this._TotalInvoice != value))
				{
					this.OnTotalInvoiceChanging(value);
					this.SendPropertyChanging();
					this._TotalInvoice = value;
					this.SendPropertyChanged("TotalInvoice");
					this.OnTotalInvoiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentsInvoice", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string PaymentsInvoice
		{
			get
			{
				return this._PaymentsInvoice;
			}
			set
			{
				if ((this._PaymentsInvoice != value))
				{
					this.OnPaymentsInvoiceChanging(value);
					this.SendPropertyChanging();
					this._PaymentsInvoice = value;
					this.SendPropertyChanged("PaymentsInvoice");
					this.OnPaymentsInvoiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusInvoice", DbType="Bit NOT NULL")]
		public bool StatusInvoice
		{
			get
			{
				return this._StatusInvoice;
			}
			set
			{
				if ((this._StatusInvoice != value))
				{
					this.OnStatusInvoiceChanging(value);
					this.SendPropertyChanging();
					this._StatusInvoice = value;
					this.SendPropertyChanged("StatusInvoice");
					this.OnStatusInvoiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paid", DbType="Bit NOT NULL")]
		public bool Paid
		{
			get
			{
				return this._Paid;
			}
			set
			{
				if ((this._Paid != value))
				{
					this.OnPaidChanging(value);
					this.SendPropertyChanging();
					this._Paid = value;
					this.SendPropertyChanged("Paid");
					this.OnPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoteInvoice", DbType="NVarChar(500)")]
		public string NoteInvoice
		{
			get
			{
				return this._NoteInvoice;
			}
			set
			{
				if ((this._NoteInvoice != value))
				{
					this.OnNoteInvoiceChanging(value);
					this.SendPropertyChanging();
					this._NoteInvoice = value;
					this.SendPropertyChanged("NoteInvoice");
					this.OnNoteInvoiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdAccount", DbType="Int NOT NULL")]
		public int IdAccount
		{
			get
			{
				return this._IdAccount;
			}
			set
			{
				if ((this._IdAccount != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdAccountChanging(value);
					this.SendPropertyChanging();
					this._IdAccount = value;
					this.SendPropertyChanged("IdAccount");
					this.OnIdAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_InvoiceDetail", Storage="_InvoiceDetails", ThisKey="IdInvoice", OtherKey="IdInvoice")]
		public EntitySet<InvoiceDetail> InvoiceDetails
		{
			get
			{
				return this._InvoiceDetails;
			}
			set
			{
				this._InvoiceDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Invoice", Storage="_Account", ThisKey="IdAccount", OtherKey="IdAccount", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.Invoices.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.Invoices.Add(this);
						this._IdAccount = value.IdAccount;
					}
					else
					{
						this._IdAccount = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InvoiceDetails(InvoiceDetail entity)
		{
			this.SendPropertyChanging();
			entity.Invoice = this;
		}
		
		private void detach_InvoiceDetails(InvoiceDetail entity)
		{
			this.SendPropertyChanging();
			entity.Invoice = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdProduct;
		
		private string _NameProduct;
		
		private int _PriceProduct;
		
		private string _ImageProduct;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _DescribeProduct;
		
		private int _StatusProduct;
		
		private int _IdProductType;
		
		private EntitySet<ProductDetail> _ProductDetails;
		
		private EntityRef<ProductType> _ProductType;
		//Giá trị ngoài
		public List<int> idSize;
		public List<string> sizeProduct;
		public List<int?> soluongton;
		public bool tinhtrangsanpham; // hết hàng hoặc còn hàng => số lượng tồn = 0
		public string urlBack;

		#region Extensibility Method Definitions
		partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdProductChanging(int value);
    partial void OnIdProductChanged();
    partial void OnNameProductChanging(string value);
    partial void OnNameProductChanged();
    partial void OnPriceProductChanging(int value);
    partial void OnPriceProductChanged();
    partial void OnImageProductChanging(string value);
    partial void OnImageProductChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnDescribeProductChanging(string value);
    partial void OnDescribeProductChanged();
    partial void OnStatusProductChanging(int value);
    partial void OnStatusProductChanged();
    partial void OnIdProductTypeChanging(int value);
    partial void OnIdProductTypeChanged();
    #endregion
		
		public Product()
		{
			this._ProductDetails = new EntitySet<ProductDetail>(new Action<ProductDetail>(this.attach_ProductDetails), new Action<ProductDetail>(this.detach_ProductDetails));
			this._ProductType = default(EntityRef<ProductType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProduct", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdProduct
		{
			get
			{
				return this._IdProduct;
			}
			set
			{
				if ((this._IdProduct != value))
				{
					this.OnIdProductChanging(value);
					this.SendPropertyChanging();
					this._IdProduct = value;
					this.SendPropertyChanged("IdProduct");
					this.OnIdProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameProduct", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string NameProduct
		{
			get
			{
				return this._NameProduct;
			}
			set
			{
				if ((this._NameProduct != value))
				{
					this.OnNameProductChanging(value);
					this.SendPropertyChanging();
					this._NameProduct = value;
					this.SendPropertyChanged("NameProduct");
					this.OnNameProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceProduct", DbType="Int NOT NULL")]
		public int PriceProduct
		{
			get
			{
				return this._PriceProduct;
			}
			set
			{
				if ((this._PriceProduct != value))
				{
					this.OnPriceProductChanging(value);
					this.SendPropertyChanging();
					this._PriceProduct = value;
					this.SendPropertyChanged("PriceProduct");
					this.OnPriceProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageProduct", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ImageProduct
		{
			get
			{
				return this._ImageProduct;
			}
			set
			{
				if ((this._ImageProduct != value))
				{
					this.OnImageProductChanging(value);
					this.SendPropertyChanging();
					this._ImageProduct = value;
					this.SendPropertyChanged("ImageProduct");
					this.OnImageProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="Date NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="Date NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescribeProduct", DbType="NVarChar(MAX)")]
		public string DescribeProduct
		{
			get
			{
				return this._DescribeProduct;
			}
			set
			{
				if ((this._DescribeProduct != value))
				{
					this.OnDescribeProductChanging(value);
					this.SendPropertyChanging();
					this._DescribeProduct = value;
					this.SendPropertyChanged("DescribeProduct");
					this.OnDescribeProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusProduct", DbType="Int NOT NULL")]
		public int StatusProduct
		{
			get
			{
				return this._StatusProduct;
			}
			set
			{
				if ((this._StatusProduct != value))
				{
					this.OnStatusProductChanging(value);
					this.SendPropertyChanging();
					this._StatusProduct = value;
					this.SendPropertyChanged("StatusProduct");
					this.OnStatusProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProductType", DbType="Int NOT NULL")]
		public int IdProductType
		{
			get
			{
				return this._IdProductType;
			}
			set
			{
				if ((this._IdProductType != value))
				{
					if (this._ProductType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdProductTypeChanging(value);
					this.SendPropertyChanging();
					this._IdProductType = value;
					this.SendPropertyChanged("IdProductType");
					this.OnIdProductTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductDetail", Storage="_ProductDetails", ThisKey="IdProduct", OtherKey="IdProduct")]
		public EntitySet<ProductDetail> ProductDetails
		{
			get
			{
				return this._ProductDetails;
			}
			set
			{
				this._ProductDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductType_Product", Storage="_ProductType", ThisKey="IdProductType", OtherKey="IdProductType", IsForeignKey=true)]
		public ProductType ProductType
		{
			get
			{
				return this._ProductType.Entity;
			}
			set
			{
				ProductType previousValue = this._ProductType.Entity;
				if (((previousValue != value) 
							|| (this._ProductType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductType.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._ProductType.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._IdProductType = value.IdProductType;
					}
					else
					{
						this._IdProductType = default(int);
					}
					this.SendPropertyChanged("ProductType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductDetails(ProductDetail entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_ProductDetails(ProductDetail entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductDetail")]
	public partial class ProductDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdSizeProduct;
		
		private int _IdProduct;
		
		private System.Nullable<int> _SoLuongTon;
		
		private EntitySet<InvoiceDetail> _InvoiceDetails;
		
		private EntityRef<Product> _Product;
		
		private EntityRef<SizeProduct> _SizeProduct;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdSizeProductChanging(int value);
    partial void OnIdSizeProductChanged();
    partial void OnIdProductChanging(int value);
    partial void OnIdProductChanged();
    partial void OnSoLuongTonChanging(System.Nullable<int> value);
    partial void OnSoLuongTonChanged();
    #endregion
		
		public ProductDetail()
		{
			this._InvoiceDetails = new EntitySet<InvoiceDetail>(new Action<InvoiceDetail>(this.attach_InvoiceDetails), new Action<InvoiceDetail>(this.detach_InvoiceDetails));
			this._Product = default(EntityRef<Product>);
			this._SizeProduct = default(EntityRef<SizeProduct>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSizeProduct", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdSizeProduct
		{
			get
			{
				return this._IdSizeProduct;
			}
			set
			{
				if ((this._IdSizeProduct != value))
				{
					if (this._SizeProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdSizeProductChanging(value);
					this.SendPropertyChanging();
					this._IdSizeProduct = value;
					this.SendPropertyChanged("IdSizeProduct");
					this.OnIdSizeProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProduct", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdProduct
		{
			get
			{
				return this._IdProduct;
			}
			set
			{
				if ((this._IdProduct != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdProductChanging(value);
					this.SendPropertyChanging();
					this._IdProduct = value;
					this.SendPropertyChanged("IdProduct");
					this.OnIdProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongTon", DbType="Int")]
		public System.Nullable<int> SoLuongTon
		{
			get
			{
				return this._SoLuongTon;
			}
			set
			{
				if ((this._SoLuongTon != value))
				{
					this.OnSoLuongTonChanging(value);
					this.SendPropertyChanging();
					this._SoLuongTon = value;
					this.SendPropertyChanged("SoLuongTon");
					this.OnSoLuongTonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductDetail_InvoiceDetail", Storage="_InvoiceDetails", ThisKey="IdSizeProduct,IdProduct", OtherKey="IdSizeProduct,IdProduct")]
		public EntitySet<InvoiceDetail> InvoiceDetails
		{
			get
			{
				return this._InvoiceDetails;
			}
			set
			{
				this._InvoiceDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductDetail", Storage="_Product", ThisKey="IdProduct", OtherKey="IdProduct", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.ProductDetails.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.ProductDetails.Add(this);
						this._IdProduct = value.IdProduct;
					}
					else
					{
						this._IdProduct = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SizeProduct_ProductDetail", Storage="_SizeProduct", ThisKey="IdSizeProduct", OtherKey="IdSizeProduct", IsForeignKey=true)]
		public SizeProduct SizeProduct
		{
			get
			{
				return this._SizeProduct.Entity;
			}
			set
			{
				SizeProduct previousValue = this._SizeProduct.Entity;
				if (((previousValue != value) 
							|| (this._SizeProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SizeProduct.Entity = null;
						previousValue.ProductDetails.Remove(this);
					}
					this._SizeProduct.Entity = value;
					if ((value != null))
					{
						value.ProductDetails.Add(this);
						this._IdSizeProduct = value.IdSizeProduct;
					}
					else
					{
						this._IdSizeProduct = default(int);
					}
					this.SendPropertyChanged("SizeProduct");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InvoiceDetails(InvoiceDetail entity)
		{
			this.SendPropertyChanging();
			entity.ProductDetail = this;
		}
		
		private void detach_InvoiceDetails(InvoiceDetail entity)
		{
			this.SendPropertyChanging();
			entity.ProductDetail = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductType")]
	public partial class ProductType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdProductType;
		
		private string _NameProductType;
		
		private int _IdSex;
		
		private EntitySet<Product> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdProductTypeChanging(int value);
    partial void OnIdProductTypeChanged();
    partial void OnNameProductTypeChanging(string value);
    partial void OnNameProductTypeChanged();
    partial void OnIdSexChanging(int value);
    partial void OnIdSexChanged();
    #endregion
		
		public ProductType()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProductType", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdProductType
		{
			get
			{
				return this._IdProductType;
			}
			set
			{
				if ((this._IdProductType != value))
				{
					this.OnIdProductTypeChanging(value);
					this.SendPropertyChanging();
					this._IdProductType = value;
					this.SendPropertyChanged("IdProductType");
					this.OnIdProductTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameProductType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NameProductType
		{
			get
			{
				return this._NameProductType;
			}
			set
			{
				if ((this._NameProductType != value))
				{
					this.OnNameProductTypeChanging(value);
					this.SendPropertyChanging();
					this._NameProductType = value;
					this.SendPropertyChanged("NameProductType");
					this.OnNameProductTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSex", DbType="Int NOT NULL")]
		public int IdSex
		{
			get
			{
				return this._IdSex;
			}
			set
			{
				if ((this._IdSex != value))
				{
					this.OnIdSexChanging(value);
					this.SendPropertyChanging();
					this._IdSex = value;
					this.SendPropertyChanged("IdSex");
					this.OnIdSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductType_Product", Storage="_Products", ThisKey="IdProductType", OtherKey="IdProductType")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.ProductType = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.ProductType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SizeProduct")]
	public partial class SizeProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdSizeProduct;
		
		private string _NameSizeProduct;
		
		private EntitySet<ProductDetail> _ProductDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdSizeProductChanging(int value);
    partial void OnIdSizeProductChanged();
    partial void OnNameSizeProductChanging(string value);
    partial void OnNameSizeProductChanged();
    #endregion
		
		public SizeProduct()
		{
			this._ProductDetails = new EntitySet<ProductDetail>(new Action<ProductDetail>(this.attach_ProductDetails), new Action<ProductDetail>(this.detach_ProductDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSizeProduct", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdSizeProduct
		{
			get
			{
				return this._IdSizeProduct;
			}
			set
			{
				if ((this._IdSizeProduct != value))
				{
					this.OnIdSizeProductChanging(value);
					this.SendPropertyChanging();
					this._IdSizeProduct = value;
					this.SendPropertyChanged("IdSizeProduct");
					this.OnIdSizeProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameSizeProduct", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string NameSizeProduct
		{
			get
			{
				return this._NameSizeProduct;
			}
			set
			{
				if ((this._NameSizeProduct != value))
				{
					this.OnNameSizeProductChanging(value);
					this.SendPropertyChanging();
					this._NameSizeProduct = value;
					this.SendPropertyChanged("NameSizeProduct");
					this.OnNameSizeProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SizeProduct_ProductDetail", Storage="_ProductDetails", ThisKey="IdSizeProduct", OtherKey="IdSizeProduct")]
		public EntitySet<ProductDetail> ProductDetails
		{
			get
			{
				return this._ProductDetails;
			}
			set
			{
				this._ProductDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductDetails(ProductDetail entity)
		{
			this.SendPropertyChanging();
			entity.SizeProduct = this;
		}
		
		private void detach_ProductDetails(ProductDetail entity)
		{
			this.SendPropertyChanging();
			entity.SizeProduct = null;
		}
	}
}
#pragma warning restore 1591
